name: Publish

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  publish-tauri:
    if: (github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'changeset-release/main')) || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          # - platform: "macos-latest" # for Arm based macs (M1 and above). Doesnt work without certificate.
          #   args: "--target aarch64-apple-darwin"
          #   architecture: "aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
            architecture: "x86_64-apple-darwin"
          # - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
          #   args: ""
          # - platform: "windows-latest"
          #   args: ""
          # -x86_64-pc-windows-msvc
          #-x86_64-unknown-linux-gnu
          # -x86_64-unknown-linux-musl

    runs-on: ${{ matrix.settings.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8.10.0
          run_install: false

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm" # Set this to npm, yarn or pnpm.

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./apps/desktop/src-tauri -> target"

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # change this to npm or pnpm depending on which one you use.

      - name: create binaries directory
        run: mkdir -p ./apps/desktop/src-tauri/binaries

      - name: download binaries
        run: curl https://bin.craftgen.ai/edge-runtime -o ./apps/desktop/src-tauri/binaries/edge-runtime

      - name: make binaries executable
        run: chmod +x ./apps/desktop/src-tauri/binaries/edge-runtime

      - name: rename the binary base on platform
        run: mv ./apps/desktop/src-tauri/binaries/edge-runtime ./apps/desktop/src-tauri/binaries/edge-runtime-${{ matrix.settings.architecture }}

      - uses: tauri-apps/tauri-action@v0.5.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_BACKEND_URL: ${{ secrets.VITE_BACKEND_URL }}
          NODE_OPTIONS: --max-old-space-size=8192
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          tauriScript: "pnpm tauri"
          releaseName: "CraftGen v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          includeUpdaterJson: true
          args: ${{ matrix.settings.args }}
          projectPath: ./apps/desktop

